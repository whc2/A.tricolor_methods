#!/usr/bin/perl -w

=head1 Name

scaffold_by_trueCtgContact.pl  -- scaffolding the contigs by using confident contig contacts derived from HiC

=head1 Description

Take the output file of ctgContact_from_maxBinContacts.pl as input data, and output is a gfa format file which 
can be viewed for graph topology in Bandage software.

Alert that the contact cutoff (--contacts ) must be carefully determined, which should 
be at the turning point of the contact distribution, which will seperate real and noise signals.

The option "--reciprocalmax" means the contact count is reciprocal max between the ends of two contigs (head or tail), 
this option can be chosen or not chosen.

=head1 Version

  Author: Fan Wei, fanwei@caas.cn
  Version: 1.0,  Date: 2021/7/6
  Note:

=head1 Usage
  
  scaffold_by_trueCtgContact.pl [options] <contig_length_file> <Contig_contact_tabular_file>
  --contacts <int>   the cutoff of HiC contact count between two contig ends, default=1
  --reciprocalmax    require the HiC contact count between two contig ends is reciprocal max
  --verbose   output running progress information to screen  
  --help      output help information to screen  

=head1 Exmple

  perl scaffold_by_trueCtgContact.pl --contacts 1500 contigs_used.len formal_1000000.matrix.CtgContact > formal_1000000.matrix.CtgContact.gfa
  perl scaffold_by_trueCtgContact.pl --reciprocalmax contigs_used.len formal_1000000.matrix.CtgContact > formal_1000000.matrix.CtgContact.gfa
  perl scaffold_by_trueCtgContact.pl --contacts 1000 --reciprocalmax contigs_used.len formal_1000000.matrix.CtgContact > formal_1000000.matrix.CtgContact.gfa

  perl scaffold_by_trueCtgContact.pl --contacts 1500 contigs_used.len formal_1000000_iced.matrix.CtgContact > formal_1000000_iced.matrix.CtgContact.gfa  
  perl scaffold_by_trueCtgContact.pl --reciprocalmax contigs_used.len formal_1000000_iced.matrix.CtgContact > formal_1000000_iced.matrix.CtgContact.gfa
  perl scaffold_by_trueCtgContact.pl --contacts 1000 --reciprocalmax contigs_used.len formal_1000000_iced.matrix.CtgContact > formal_1000000_iced.matrix.CtgContact.gfa


=cut

use strict;
use Getopt::Long;
use FindBin qw($Bin $Script);
use File::Basename qw(basename dirname); 
use Data::Dumper;


##get options from command line into variables and set default values
my $Contact_cutoff;
my $Reciprocal_max;
my ($Verbose,$Help);
GetOptions(
	"contacts:f"=>\$Contact_cutoff,
	"reciprocalmax"=>\$Reciprocal_max,
	"verbose"=>\$Verbose,
	"help"=>\$Help
);
$Contact_cutoff ||= 1;
die `pod2text $0` if (@ARGV == 0 || $Help);

my $Contig_used_file = shift;
my $CtgContact_file = shift;

my %UsedContigs;
my %ReciprocalMax;


##only do statistics for contigs included in $Contig_used_file
open IN, $Contig_used_file || die "fail open $Contig_used_file \n";
while (<IN>) {
	if(/(\S+)\s+(\d+)/){
		
		my $ctgId = $1;
		my $ctgLen = $2;
		
		$UsedContigs{$ctgId} = $ctgLen;

		print "S\t$ctgId\t*\tLN:i:$ctgLen\n";  ##S       s0.utg000001l   *       LN:i:636309
	}
}
close IN;

##this file is generated by ctgContact_from_maxBinContacts.pl
##To get the max Hic conatact count for each contig ends
open IN, $CtgContact_file || die "fail open $CtgContact_file\n";;
while (<IN>) {
	next if(/^\#/);
	chomp;
	my @t = split /\s+/;
	my $ctg1 = $t[0]; 
	my $ctg2 = $t[1]; 
	my $contact = $t[2]; 
	my $ctg1Pos = $t[3]; 
	my $ctg2Pos= $t[4]; 

	
	##filter contig links that not locus in either head or tail

	next if(! exists $UsedContigs{$ctg1} || ! exists $UsedContigs{$ctg2} );
	
	$ReciprocalMax{"$ctg1$ctg1Pos"} = 0 if(!exists $ReciprocalMax{"$ctg1$ctg1Pos"});
	$ReciprocalMax{"$ctg2$ctg2Pos"} = 0 if(!exists $ReciprocalMax{"$ctg2$ctg2Pos"});

	if ( $ReciprocalMax{"$ctg1$ctg1Pos"} < $contact ) {
		$ReciprocalMax{"$ctg1$ctg1Pos"} = $contact;
	}
	if ( $ReciprocalMax{"$ctg2$ctg2Pos"} < $contact ) {
		$ReciprocalMax{"$ctg2$ctg2Pos"} = $contact;
	}
}
close IN;
#print Dumper \%ReciprocalMax;
#exit;

##this file is generated by ctgContact_from_maxBinContacts.pl
open IN, $CtgContact_file || die "fail open $CtgContact_file";
while (<IN>) {
	next if(/^\#/);
	chomp;
	my @t = split /\s+/;
	my $ctg1 = $t[0]; 
	my $ctg2 = $t[1]; 
	my $contact = $t[2]; 
	my $ctg1Pos = $t[3]; 
	my $ctg2Pos= $t[4]; 

	
	next if(! exists $UsedContigs{$ctg1} || ! exists $UsedContigs{$ctg2} );

	if ($contact >= $Contact_cutoff) {
			
		my $ctg1Strand = ($ctg1Pos =~ /head/i) ? "-" : "+";
		my $ctg2Strand = ($ctg2Pos =~ /head/i) ? "+" : "-";
	
		##L       s95.ctg013321l  -       s95.ctg010300l  +       13193M  L1:i:649
		
		if (! defined $Reciprocal_max) {
			print "L\t$ctg1\t$ctg1Strand\t$ctg2\t$ctg2Strand\t0M\tL1:i:0\tRM:i:0\n";

		}else
		{
			if ($contact eq $ReciprocalMax{"$ctg1$ctg1Pos"} && $contact eq $ReciprocalMax{"$ctg2$ctg2Pos"}) {
				print "L\t$ctg1\t$ctg1Strand\t$ctg2\t$ctg2Strand\t0M\tL1:i:0\tRM:i:1\n";

			}
		}
	}
}
close IN;
